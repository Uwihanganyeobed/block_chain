{
	"id": "71a47732122c0e0bf0888b04fb5ee9e3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/control_statements.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.5.1;\n\ncontract Operator {\n    uint256 public num1;\n    uint256 public num2;\n    uint256 public result;\n\n    constructor(uint256 _num1, uint256 _num2) public {\n        num1 = _num1;\n        num2 = _num2;\n    }\n\n    function calculate(string memory operation) public returns (uint256) {\n        if (\n            keccak256(abi.encodePacked(operation)) ==\n            keccak256(abi.encodePacked(\"+\"))\n        ) {\n            result = num1 + num2;\n        } else if (\n            keccak256(abi.encodePacked(operation)) ==\n            keccak256(abi.encodePacked(\"-\"))\n        ) {\n            require(num1 >= num2, \"Subtraction result cannot be negative\");\n            result = num1 - num2;\n        } else if (\n            keccak256(abi.encodePacked(operation)) ==\n            keccak256(abi.encodePacked(\"/\"))\n        ) {\n            require(num2 > 0, \"Division result cannot be 0\");\n            result = num1 / num2;\n        } else if (\n            keccak256(abi.encodePacked(operation)) ==\n            keccak256(abi.encodePacked(\"*\"))\n        ) {\n            result = num1 * num2;\n        } else {\n            revert(\"Unsupported operation\");\n        }\n        return result;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/control_statements.sol": {
				"Operator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_num2",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "string",
									"name": "operation",
									"type": "string"
								}
							],
							"name": "calculate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "num1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "num2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "result",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/control_statements.sol\":57:1229  contract Operator {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/control_statements.sol\":159:259  constructor(uint256 _num1, uint256 _num2) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/control_statements.sol\":159:259  constructor(uint256 _num1, uint256 _num2) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/control_statements.sol\":159:259  constructor(uint256 _num1, uint256 _num2) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/control_statements.sol\":225:230  _num1 */\n  dup2\n    /* \"contracts/control_statements.sol\":218:222  num1 */\n  0x00\n    /* \"contracts/control_statements.sol\":218:230  num1 = _num1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/control_statements.sol\":247:252  _num2 */\n  dup1\n    /* \"contracts/control_statements.sol\":240:244  num2 */\n  0x01\n    /* \"contracts/control_statements.sol\":240:252  num2 = _num2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/control_statements.sol\":159:259  constructor(uint256 _num1, uint256 _num2) public {... */\n  pop\n  pop\n    /* \"contracts/control_statements.sol\":57:1229  contract Operator {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/control_statements.sol\":57:1229  contract Operator {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/control_statements.sol\":57:1229  contract Operator {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x15d4266c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b9eac4b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x65372147\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7ed07dff\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/control_statements.sol\":106:125  uint256 public num2 */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/control_statements.sol\":81:100  uint256 public num1 */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/control_statements.sol\":131:152  uint256 public result */\n    tag_5:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/control_statements.sol\":265:1227  function calculate(string memory operation) public returns (uint256) {... */\n    tag_6:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/control_statements.sol\":265:1227  function calculate(string memory operation) public returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"contracts/control_statements.sol\":265:1227  function calculate(string memory operation) public returns (uint256) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"contracts/control_statements.sol\":265:1227  function calculate(string memory operation) public returns (uint256) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_17:\n        /* \"contracts/control_statements.sol\":265:1227  function calculate(string memory operation) public returns (uint256) {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/control_statements.sol\":265:1227  function calculate(string memory operation) public returns (uint256) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/control_statements.sol\":106:125  uint256 public num2 */\n    tag_8:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/control_statements.sol\":81:100  uint256 public num1 */\n    tag_10:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/control_statements.sol\":131:152  uint256 public result */\n    tag_12:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/control_statements.sol\":265:1227  function calculate(string memory operation) public returns (uint256) {... */\n    tag_18:\n        /* \"contracts/control_statements.sol\":325:332  uint256 */\n      0x00\n        /* \"contracts/control_statements.sol\":425:446  abi.encodePacked(\"+\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x2b00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/control_statements.sol\":425:446  abi.encodePacked(\"+\") */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/control_statements.sol\":415:447  keccak256(abi.encodePacked(\"+\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/control_statements.sol\":388:397  operation */\n      dup3\n        /* \"contracts/control_statements.sol\":371:398  abi.encodePacked(operation) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_20:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/control_statements.sol\":371:398  abi.encodePacked(operation) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/control_statements.sol\":371:398  abi.encodePacked(operation) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/control_statements.sol\":361:399  keccak256(abi.encodePacked(operation)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/control_statements.sol\":361:447  keccak256(abi.encodePacked(operation)) ==... */\n      eq\n        /* \"contracts/control_statements.sol\":344:1198  if (... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/control_statements.sol\":488:492  num2 */\n      sload(0x01)\n        /* \"contracts/control_statements.sol\":481:485  num1 */\n      sload(0x00)\n        /* \"contracts/control_statements.sol\":481:492  num1 + num2 */\n      add\n        /* \"contracts/control_statements.sol\":472:478  result */\n      0x02\n        /* \"contracts/control_statements.sol\":472:492  result = num1 + num2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/control_statements.sol\":344:1198  if (... */\n      jump(tag_24)\n    tag_23:\n        /* \"contracts/control_statements.sol\":590:611  abi.encodePacked(\"-\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x2d00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/control_statements.sol\":590:611  abi.encodePacked(\"-\") */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/control_statements.sol\":580:612  keccak256(abi.encodePacked(\"-\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/control_statements.sol\":553:562  operation */\n      dup3\n        /* \"contracts/control_statements.sol\":536:563  abi.encodePacked(operation) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_25:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_25)\n    tag_27:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/control_statements.sol\":536:563  abi.encodePacked(operation) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/control_statements.sol\":536:563  abi.encodePacked(operation) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/control_statements.sol\":526:564  keccak256(abi.encodePacked(operation)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/control_statements.sol\":526:612  keccak256(abi.encodePacked(operation)) ==... */\n      eq\n        /* \"contracts/control_statements.sol\":509:1198  if (... */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/control_statements.sol\":653:657  num2 */\n      sload(0x01)\n        /* \"contracts/control_statements.sol\":645:649  num1 */\n      sload(0x00)\n        /* \"contracts/control_statements.sol\":645:657  num1 >= num2 */\n      lt\n      iszero\n        /* \"contracts/control_statements.sol\":637:699  require(num1 >= num2, \"Subtraction result cannot be negative\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3fef3fe5a9a000188c409bbe4ef1163dfe4aa662d6ff30cd78d40f5021ed1efb\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"contracts/control_statements.sol\":729:733  num2 */\n      sload(0x01)\n        /* \"contracts/control_statements.sol\":722:726  num1 */\n      sload(0x00)\n        /* \"contracts/control_statements.sol\":722:733  num1 - num2 */\n      sub\n        /* \"contracts/control_statements.sol\":713:719  result */\n      0x02\n        /* \"contracts/control_statements.sol\":713:733  result = num1 - num2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/control_statements.sol\":509:1198  if (... */\n      jump(tag_30)\n    tag_28:\n        /* \"contracts/control_statements.sol\":831:852  abi.encodePacked(\"/\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x2f00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/control_statements.sol\":831:852  abi.encodePacked(\"/\") */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/control_statements.sol\":821:853  keccak256(abi.encodePacked(\"/\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/control_statements.sol\":794:803  operation */\n      dup3\n        /* \"contracts/control_statements.sol\":777:804  abi.encodePacked(operation) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_31:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_31)\n    tag_33:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/control_statements.sol\":777:804  abi.encodePacked(operation) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/control_statements.sol\":777:804  abi.encodePacked(operation) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/control_statements.sol\":767:805  keccak256(abi.encodePacked(operation)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/control_statements.sol\":767:853  keccak256(abi.encodePacked(operation)) ==... */\n      eq\n        /* \"contracts/control_statements.sol\":750:1198  if (... */\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/control_statements.sol\":893:894  0 */\n      0x00\n        /* \"contracts/control_statements.sol\":886:890  num2 */\n      sload(0x01)\n        /* \"contracts/control_statements.sol\":886:894  num2 > 0 */\n      gt\n        /* \"contracts/control_statements.sol\":878:926  require(num2 > 0, \"Division result cannot be 0\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4469766973696f6e20726573756c742063616e6e6f7420626520300000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/control_statements.sol\":956:960  num2 */\n      sload(0x01)\n        /* \"contracts/control_statements.sol\":949:953  num1 */\n      sload(0x00)\n        /* \"contracts/control_statements.sol\":949:960  num1 / num2 */\n      dup2\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      div\n        /* \"contracts/control_statements.sol\":940:946  result */\n      0x02\n        /* \"contracts/control_statements.sol\":940:960  result = num1 / num2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/control_statements.sol\":750:1198  if (... */\n      jump(tag_37)\n    tag_34:\n        /* \"contracts/control_statements.sol\":1058:1079  abi.encodePacked(\"*\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x2a00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/control_statements.sol\":1058:1079  abi.encodePacked(\"*\") */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/control_statements.sol\":1048:1080  keccak256(abi.encodePacked(\"*\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/control_statements.sol\":1021:1030  operation */\n      dup3\n        /* \"contracts/control_statements.sol\":1004:1031  abi.encodePacked(operation) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_38:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_38)\n    tag_40:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/control_statements.sol\":1004:1031  abi.encodePacked(operation) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/control_statements.sol\":1004:1031  abi.encodePacked(operation) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/control_statements.sol\":994:1032  keccak256(abi.encodePacked(operation)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/control_statements.sol\":994:1080  keccak256(abi.encodePacked(operation)) ==... */\n      eq\n        /* \"contracts/control_statements.sol\":977:1198  if (... */\n      iszero\n      tag_41\n      jumpi\n        /* \"contracts/control_statements.sol\":1121:1125  num2 */\n      sload(0x01)\n        /* \"contracts/control_statements.sol\":1114:1118  num1 */\n      sload(0x00)\n        /* \"contracts/control_statements.sol\":1114:1125  num1 * num2 */\n      mul\n        /* \"contracts/control_statements.sol\":1105:1111  result */\n      0x02\n        /* \"contracts/control_statements.sol\":1105:1125  result = num1 * num2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/control_statements.sol\":977:1198  if (... */\n      jump(tag_42)\n    tag_41:\n        /* \"contracts/control_statements.sol\":1156:1187  revert(\"Unsupported operation\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e737570706f72746564206f7065726174696f6e0000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/control_statements.sol\":977:1198  if (... */\n    tag_42:\n        /* \"contracts/control_statements.sol\":750:1198  if (... */\n    tag_37:\n        /* \"contracts/control_statements.sol\":509:1198  if (... */\n    tag_30:\n        /* \"contracts/control_statements.sol\":344:1198  if (... */\n    tag_24:\n        /* \"contracts/control_statements.sol\":1214:1220  result */\n      sload(0x02)\n        /* \"contracts/control_statements.sol\":1207:1220  return result */\n      swap1\n      pop\n        /* \"contracts/control_statements.sol\":265:1227  function calculate(string memory operation) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_3fef3fe5a9a000188c409bbe4ef1163dfe4aa662d6ff30cd78d40f5021ed1efb 5375627472616374696f6e20726573756c742063616e6e6f74206265206e65676174697665\n\n    auxdata: 0xa265627a7a72315820f44584d8cf0b4aaac76e0e2c8cee1fc673394e265825beed390df670f6f5f34364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106f03803806106f08339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000819055508060018190555050506106838061006d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806315d4266c146100515780633b9eac4b1461006f578063653721471461008d5780637ed07dff146100ab575b600080fd5b61005961017a565b6040518082815260200191505060405180910390f35b610077610180565b6040518082815260200191505060405180910390f35b610095610186565b6040518082815260200191505060405180910390f35b610164600480360360208110156100c157600080fd5b81019080803590602001906401000000008111156100de57600080fd5b8201836020820111156100f057600080fd5b8035906020019184600183028401116401000000008311171561011257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061018c565b6040518082815260200191505060405180910390f35b60015481565b60005481565b60025481565b600060405160200180807f2b00000000000000000000000000000000000000000000000000000000000000815250600101905060405160208183030381529060405280519060200120826040516020018082805190602001908083835b6020831061020c57805182526020820191506020810190506020830392506101e9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561025f576001546000540160028190555061061f565b60405160200180807f2d00000000000000000000000000000000000000000000000000000000000000815250600101905060405160208183030381529060405280519060200120826040516020018082805190602001908083835b602083106102dd57805182526020820191506020810190506020830392506102ba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561038d57600154600054101561037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061062a6025913960400191505060405180910390fd5b6001546000540360028190555061061e565b60405160200180807f2f00000000000000000000000000000000000000000000000000000000000000815250600101905060405160208183030381529060405280519060200120826040516020018082805190602001908083835b6020831061040b57805182526020820191506020810190506020830392506103e8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156104dd576000600154116104c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4469766973696f6e20726573756c742063616e6e6f742062652030000000000081525060200191505060405180910390fd5b600154600054816104d157fe5b0460028190555061061d565b60405160200180807f2a00000000000000000000000000000000000000000000000000000000000000815250600101905060405160208183030381529060405280519060200120826040516020018082805190602001908083835b6020831061055b5780518252602082019150602081019050602083039250610538565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156105ae576001546000540260028190555061061c565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e737570706f72746564206f7065726174696f6e000000000000000000000081525060200191505060405180910390fd5b5b5b5b600254905091905056fe5375627472616374696f6e20726573756c742063616e6e6f74206265206e65676174697665a265627a7a72315820f44584d8cf0b4aaac76e0e2c8cee1fc673394e265825beed390df670f6f5f34364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6F0 CODESIZE SUB DUP1 PUSH2 0x6F0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x683 DUP1 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x15D4266C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3B9EAC4B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x65372147 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x7ED07DFF EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x25F JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD ADD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x2D00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2DD JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x38D JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x62A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x2F00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x40B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4469766973696F6E20726573756C742063616E6E6F7420626520300000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD DUP2 PUSH2 0x4D1 JUMPI INVALID JUMPDEST DIV PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x2A00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x55B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x5AE JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD MUL PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E737570706F72746564206F7065726174696F6E0000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH22 0x627472616374696F6E20726573756C742063616E6E6F PUSH21 0x206265206E65676174697665A265627A7A72315820 DELEGATECALL GASLIMIT DUP5 0xD8 0xCF SIGNEXTEND 0x4A 0xAA 0xC7 PUSH15 0xE2C8CEE1FC673394E265825BEED39 0xD 0xF6 PUSH17 0xF6F5F34364736F6C634300051100320000 ",
							"sourceMap": "57:1172:0:-;;;159:100;8:9:-1;5:2;;;30:1;27;20:12;5:2;159:100:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;159:100:0;;;;;;;;;;;;;;;;;;;;;;;;;225:5;218:4;:12;;;;247:5;240:4;:12;;;;159:100;;57:1172;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806315d4266c146100515780633b9eac4b1461006f578063653721471461008d5780637ed07dff146100ab575b600080fd5b61005961017a565b6040518082815260200191505060405180910390f35b610077610180565b6040518082815260200191505060405180910390f35b610095610186565b6040518082815260200191505060405180910390f35b610164600480360360208110156100c157600080fd5b81019080803590602001906401000000008111156100de57600080fd5b8201836020820111156100f057600080fd5b8035906020019184600183028401116401000000008311171561011257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061018c565b6040518082815260200191505060405180910390f35b60015481565b60005481565b60025481565b600060405160200180807f2b00000000000000000000000000000000000000000000000000000000000000815250600101905060405160208183030381529060405280519060200120826040516020018082805190602001908083835b6020831061020c57805182526020820191506020810190506020830392506101e9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561025f576001546000540160028190555061061f565b60405160200180807f2d00000000000000000000000000000000000000000000000000000000000000815250600101905060405160208183030381529060405280519060200120826040516020018082805190602001908083835b602083106102dd57805182526020820191506020810190506020830392506102ba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561038d57600154600054101561037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061062a6025913960400191505060405180910390fd5b6001546000540360028190555061061e565b60405160200180807f2f00000000000000000000000000000000000000000000000000000000000000815250600101905060405160208183030381529060405280519060200120826040516020018082805190602001908083835b6020831061040b57805182526020820191506020810190506020830392506103e8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156104dd576000600154116104c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4469766973696f6e20726573756c742063616e6e6f742062652030000000000081525060200191505060405180910390fd5b600154600054816104d157fe5b0460028190555061061d565b60405160200180807f2a00000000000000000000000000000000000000000000000000000000000000815250600101905060405160208183030381529060405280519060200120826040516020018082805190602001908083835b6020831061055b5780518252602082019150602081019050602083039250610538565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156105ae576001546000540260028190555061061c565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e737570706f72746564206f7065726174696f6e000000000000000000000081525060200191505060405180910390fd5b5b5b5b600254905091905056fe5375627472616374696f6e20726573756c742063616e6e6f74206265206e65676174697665a265627a7a72315820f44584d8cf0b4aaac76e0e2c8cee1fc673394e265825beed390df670f6f5f34364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x15D4266C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3B9EAC4B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x65372147 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x7ED07DFF EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x25F JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD ADD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x2D00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2DD JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x38D JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x62A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x2F00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x40B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4469766973696F6E20726573756C742063616E6E6F7420626520300000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD DUP2 PUSH2 0x4D1 JUMPI INVALID JUMPDEST DIV PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x2A00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x55B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x5AE JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD MUL PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E737570706F72746564206F7065726174696F6E0000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH22 0x627472616374696F6E20726573756C742063616E6E6F PUSH21 0x206265206E65676174697665A265627A7A72315820 DELEGATECALL GASLIMIT DUP5 0xD8 0xCF SIGNEXTEND 0x4A 0xAA 0xC7 PUSH15 0xE2C8CEE1FC673394E265825BEED39 0xD 0xF6 PUSH17 0xF6F5F34364736F6C634300051100320000 ",
							"sourceMap": "57:1172:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:1172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;106:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;131:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;265:962;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;265:962:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;265:962:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;265:962:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;265:962:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;265:962:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;106:19;;;;:::o;81:::-;;;;:::o;131:21::-;;;;:::o;265:962::-;325:7;425:21;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;425:21:0;;;415:32;;;;;;388:9;371:27;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;371:27:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;371:27:0;;;361:38;;;;;;:86;344:854;;;488:4;;481;;:11;472:6;:20;;;;344:854;;;590:21;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;590:21:0;;;580:32;;;;;;553:9;536:27;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;536:27:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;536:27:0;;;526:38;;;;;;:86;509:689;;;653:4;;645;;:12;;637:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:4;;722;;:11;713:6;:20;;;;509:689;;;831:21;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;831:21:0;;;821:32;;;;;;794:9;777:27;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;777:27:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;777:27:0;;;767:38;;;;;;:86;750:448;;;893:1;886:4;;:8;878:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:4;;949;;:11;;;;;;940:6;:20;;;;750:448;;;1058:21;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1058:21:0;;;1048:32;;;;;;1021:9;1004:27;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1004:27:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1004:27:0;;;994:38;;;;;;:86;977:221;;;1121:4;;1114;;:11;1105:6;:20;;;;977:221;;;1156:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:221;750:448;509:689;344:854;1214:6;;1207:13;;265:962;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "333400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculate(string)": "infinite",
								"num1()": "1005",
								"num2()": "983",
								"result()": "1027"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1229,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "MSTORE"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "POP"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "MLOAD"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "PUSHSIZE"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "CODESIZE"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SUB"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "PUSHSIZE"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "DUP4"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "CODECOPY"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "DUP2"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "DUP2"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "DUP2"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "MLOAD"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP3"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP2"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "MLOAD"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP3"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP2"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "SWAP1"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "POP"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "POP"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "POP"
								},
								{
									"begin": 225,
									"end": 230,
									"name": "DUP2"
								},
								{
									"begin": 218,
									"end": 222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 218,
									"end": 230,
									"name": "DUP2"
								},
								{
									"begin": 218,
									"end": 230,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 230,
									"name": "SSTORE"
								},
								{
									"begin": 218,
									"end": 230,
									"name": "POP"
								},
								{
									"begin": 247,
									"end": 252,
									"name": "DUP1"
								},
								{
									"begin": 240,
									"end": 244,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 240,
									"end": 252,
									"name": "DUP2"
								},
								{
									"begin": 240,
									"end": 252,
									"name": "SWAP1"
								},
								{
									"begin": 240,
									"end": 252,
									"name": "SSTORE"
								},
								{
									"begin": 240,
									"end": 252,
									"name": "POP"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "POP"
								},
								{
									"begin": 159,
									"end": 259,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "DUP1"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "CODECOPY"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1229,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f44584d8cf0b4aaac76e0e2c8cee1fc673394e265825beed390df670f6f5f34364736f6c63430005110032",
									".code": [
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "LT"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "SHR"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "15D4266C"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "3B9EAC4B"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "65372147"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "7ED07DFF"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1229,
											"name": "REVERT"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "MLOAD"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "DUP3"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "DUP2"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "MSTORE"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "ADD"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "SWAP2"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "MLOAD"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "SWAP2"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "SUB"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "RETURN"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "MLOAD"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "MSTORE"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "MLOAD"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "SUB"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "RETURN"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "JUMPDEST"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "JUMPDEST"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "MLOAD"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "DUP3"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "DUP2"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "ADD"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "MLOAD"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "SUB"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "SWAP1"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "RETURN"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DIV"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "MUL"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP4"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP3"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP4"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP3"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP3"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "RETURN"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "SLOAD"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "DUP2"
										},
										{
											"begin": 106,
											"end": 125,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 100,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "JUMPDEST"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "SLOAD"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "DUP2"
										},
										{
											"begin": 131,
											"end": 152,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "MLOAD"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "PUSH",
											"value": "2B00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 446,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 447,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 447,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 447,
											"name": "SWAP1"
										},
										{
											"begin": 415,
											"end": 447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 415,
											"end": 447,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 447,
											"name": "KECCAK256"
										},
										{
											"begin": 388,
											"end": 397,
											"name": "DUP3"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "MLOAD"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "ADD"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "DUP3"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "MLOAD"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "ADD"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "DUP4"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "ADD"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "SWAP2"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 371,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 361,
											"end": 399,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 399,
											"name": "MLOAD"
										},
										{
											"begin": 361,
											"end": 399,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 399,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 361,
											"end": 399,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 399,
											"name": "KECCAK256"
										},
										{
											"begin": 361,
											"end": 447,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "ISZERO"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "JUMPI"
										},
										{
											"begin": 488,
											"end": 492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 488,
											"end": 492,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 485,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 492,
											"name": "ADD"
										},
										{
											"begin": 472,
											"end": 478,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "DUP2"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "SWAP1"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "SSTORE"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "JUMP"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "MLOAD"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "ADD"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "DUP1"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "DUP1"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "PUSH",
											"value": "2D00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "MSTORE"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "ADD"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "SWAP1"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "SWAP1"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 590,
											"end": 611,
											"name": "MSTORE"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "MLOAD"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP1"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "ADD"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "KECCAK256"
										},
										{
											"begin": 553,
											"end": 562,
											"name": "DUP3"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MLOAD"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP3"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MLOAD"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP4"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP2"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MSTORE"
										},
										{
											"begin": 526,
											"end": 564,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 564,
											"name": "MLOAD"
										},
										{
											"begin": 526,
											"end": 564,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 564,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 526,
											"end": 564,
											"name": "ADD"
										},
										{
											"begin": 526,
											"end": 564,
											"name": "KECCAK256"
										},
										{
											"begin": 526,
											"end": 612,
											"name": "EQ"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "ISZERO"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "JUMPI"
										},
										{
											"begin": 653,
											"end": 657,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 653,
											"end": 657,
											"name": "SLOAD"
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 645,
											"end": 649,
											"name": "SLOAD"
										},
										{
											"begin": 645,
											"end": 657,
											"name": "LT"
										},
										{
											"begin": 645,
											"end": 657,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "JUMPI"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "MLOAD"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP3"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "SUB"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP3"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH data",
											"value": "3FEF3FE5A9A000188C409BBE4EF1163DFE4AA662D6FF30CD78D40F5021ED1EFB"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "CODECOPY"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "MLOAD"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "SUB"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "REVERT"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 637,
											"end": 699,
											"name": "JUMPDEST"
										},
										{
											"begin": 729,
											"end": 733,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 729,
											"end": 733,
											"name": "SLOAD"
										},
										{
											"begin": 722,
											"end": 726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 726,
											"name": "SLOAD"
										},
										{
											"begin": 722,
											"end": 733,
											"name": "SUB"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "SSTORE"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "POP"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "JUMP"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MLOAD"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ADD"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"value": "2F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MSTORE"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ADD"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MSTORE"
										},
										{
											"begin": 821,
											"end": 853,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 853,
											"name": "MLOAD"
										},
										{
											"begin": 821,
											"end": 853,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 853,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 853,
											"name": "KECCAK256"
										},
										{
											"begin": 794,
											"end": 803,
											"name": "DUP3"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "MLOAD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP3"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "MLOAD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP4"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "SWAP2"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "MSTORE"
										},
										{
											"begin": 767,
											"end": 805,
											"name": "DUP1"
										},
										{
											"begin": 767,
											"end": 805,
											"name": "MLOAD"
										},
										{
											"begin": 767,
											"end": 805,
											"name": "SWAP1"
										},
										{
											"begin": 767,
											"end": 805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 767,
											"end": 805,
											"name": "ADD"
										},
										{
											"begin": 767,
											"end": 805,
											"name": "KECCAK256"
										},
										{
											"begin": 767,
											"end": 853,
											"name": "EQ"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "ISZERO"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "JUMPI"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 886,
											"end": 890,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 886,
											"end": 890,
											"name": "SLOAD"
										},
										{
											"begin": 886,
											"end": 894,
											"name": "GT"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "JUMPI"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "MLOAD"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "MSTORE"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "ADD"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP1"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP1"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "ADD"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP3"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "SUB"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP3"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "MSTORE"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "MSTORE"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "ADD"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP1"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "4469766973696F6E20726573756C742063616E6E6F7420626520300000000000"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "MSTORE"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "ADD"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "SWAP2"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "MLOAD"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "DUP1"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "SWAP2"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "SUB"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "SWAP1"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "REVERT"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 878,
											"end": 926,
											"name": "JUMPDEST"
										},
										{
											"begin": 956,
											"end": 960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 956,
											"end": 960,
											"name": "SLOAD"
										},
										{
											"begin": 949,
											"end": 953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 949,
											"end": 953,
											"name": "SLOAD"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "JUMPI"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "INVALID"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "DIV"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 940,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 940,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 940,
											"end": 960,
											"name": "SSTORE"
										},
										{
											"begin": 940,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "JUMP"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "MLOAD"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "ADD"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "DUP1"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "DUP1"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "PUSH",
											"value": "2A00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "DUP2"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "MSTORE"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "POP"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "ADD"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "SWAP1"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "POP"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "SWAP1"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1080,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1080,
											"name": "MLOAD"
										},
										{
											"begin": 1048,
											"end": 1080,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1080,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1080,
											"name": "KECCAK256"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "DUP3"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "MLOAD"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "ADD"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP3"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "MLOAD"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SWAP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "ADD"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SWAP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP4"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SWAP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "ADD"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SWAP2"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SWAP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "MSTORE"
										},
										{
											"begin": 994,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 994,
											"end": 1032,
											"name": "MLOAD"
										},
										{
											"begin": 994,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 994,
											"end": 1032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 994,
											"end": 1032,
											"name": "ADD"
										},
										{
											"begin": 994,
											"end": 1032,
											"name": "KECCAK256"
										},
										{
											"begin": 994,
											"end": 1080,
											"name": "EQ"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "ISZERO"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "JUMPI"
										},
										{
											"begin": 1121,
											"end": 1125,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1121,
											"end": 1125,
											"name": "SLOAD"
										},
										{
											"begin": 1114,
											"end": 1118,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1118,
											"name": "SLOAD"
										},
										{
											"begin": 1114,
											"end": 1125,
											"name": "MUL"
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1105,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1105,
											"end": 1125,
											"name": "SWAP1"
										},
										{
											"begin": 1105,
											"end": 1125,
											"name": "SSTORE"
										},
										{
											"begin": 1105,
											"end": 1125,
											"name": "POP"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "JUMP"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "MLOAD"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP3"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "SUB"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP3"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "556E737570706F72746564206F7065726174696F6E0000000000000000000000"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "MLOAD"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "SUB"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "REVERT"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 977,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 750,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 509,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 344,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 1214,
											"end": 1220,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1214,
											"end": 1220,
											"name": "SLOAD"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 1227,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"3FEF3FE5A9A000188C409BBE4EF1163DFE4AA662D6FF30CD78D40F5021ED1EFB": "5375627472616374696f6e20726573756c742063616e6e6f74206265206e65676174697665"
									}
								}
							}
						},
						"methodIdentifiers": {
							"calculate(string)": "7ed07dff",
							"num1()": "3b9eac4b",
							"num2()": "15d4266c",
							"result()": "65372147"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_num2\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"}],\"name\":\"calculate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"num1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"num2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/control_statements.sol\":\"Operator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/control_statements.sol\":{\"keccak256\":\"0xfd0356ee8b1b53acd45fed472d2a01df193d47f19d57b01551ed8607dc9a2a90\",\"urls\":[\"bzz-raw://29aef9a43312fe8d4f1fe0ee98d39a4748efd5a40a4606d62fc59e1a98f0d9fb\",\"dweb:/ipfs/QmdZqifcGnSB9gY5JBE9hTehCiBQpNXUSEepCG9izS4r8E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/control_statements.sol:Operator",
								"label": "num1",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "contracts/control_statements.sol:Operator",
								"label": "num2",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/control_statements.sol:Operator",
								"label": "result",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/control_statements.sol": {
				"ast": {
					"absolutePath": "contracts/control_statements.sol",
					"exportedSymbols": {
						"Operator": [
							137
						]
					},
					"id": 138,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 137,
							"linearizedBaseContracts": [
								137
							],
							"name": "Operator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "num1",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "81:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "81:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "num2",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "106:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "106:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "result",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "131:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "131:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "208:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 14,
														"name": "num1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "218:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "_num1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "225:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "218:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "218:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 18,
														"name": "num2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "240:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 19,
														"name": "_num2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "247:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "240:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "240:12:0"
											}
										]
									},
									"documentation": null,
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_num1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "171:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"name": "_num2",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "186:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "170:30:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:0:0"
									},
									"scope": 137,
									"src": "159:100:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "334:893:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 33,
																		"name": "operation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "388:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 31,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "371:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "371:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "371:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 30,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "361:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "361:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "2b",
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "442:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																			"typeString": "literal_string \"+\""
																		},
																		"value": "+"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																			"typeString": "literal_string \"+\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 37,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "425:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "425:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "425:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 36,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "415:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "415:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "361:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 53,
																			"name": "operation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "553:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 51,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "536:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "536:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "536:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 50,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "526:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "526:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "2d",
																			"id": 59,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "607:3:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																				"typeString": "literal_string \"-\""
																			},
																			"value": "-"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																				"typeString": "literal_string \"-\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 57,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "590:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "590:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "590:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 56,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "580:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "580:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "526:86:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "operation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "794:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 78,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 139,
																				"src": "777:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "777:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "777:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 77,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "767:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "767:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "2f",
																				"id": 86,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "848:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
																					"typeString": "literal_string \"/\""
																				},
																				"value": "/"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
																					"typeString": "literal_string \"/\""
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 84,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 139,
																				"src": "831:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 85,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "831:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "831:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 83,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "821:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "821:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "767:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 107,
																					"name": "operation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "1021:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 105,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 139,
																					"src": "1004:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1004:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1004:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 104,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "994:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "994:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "2a",
																					"id": 113,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1075:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_04994f67dc55b09e814ab7ffc8df3686b4afb2bb53e60eae97ef043fe03fb829",
																						"typeString": "literal_string \"*\""
																					},
																					"value": "*"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_04994f67dc55b09e814ab7ffc8df3686b4afb2bb53e60eae97ef043fe03fb829",
																						"typeString": "literal_string \"*\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 111,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 139,
																					"src": "1058:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1058:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1058:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 110,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "1048:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1048:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "994:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 128,
																"nodeType": "Block",
																"src": "1142:56:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "556e737570706f72746564206f7065726174696f6e",
																					"id": 125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1163:23:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_d7c7d2b236b51fd89629e4d9859becd69328dedbd10a2b39b9506664e672e4f5",
																						"typeString": "literal_string \"Unsupported operation\""
																					},
																					"value": "Unsupported operation"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_d7c7d2b236b51fd89629e4d9859becd69328dedbd10a2b39b9506664e672e4f5",
																						"typeString": "literal_string \"Unsupported operation\""
																					}
																				],
																				"id": 124,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					157,
																					158
																				],
																				"referencedDeclaration": 158,
																				"src": "1156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1156:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 127,
																		"nodeType": "ExpressionStatement",
																		"src": "1156:31:0"
																	}
																]
															},
															"id": 129,
															"nodeType": "IfStatement",
															"src": "977:221:0",
															"trueBody": {
																"id": 123,
																"nodeType": "Block",
																"src": "1091:45:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 117,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 7,
																				"src": "1105:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 118,
																					"name": "num1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3,
																					"src": "1114:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 119,
																					"name": "num2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "1121:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1114:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1105:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 122,
																		"nodeType": "ExpressionStatement",
																		"src": "1105:20:0"
																	}
																]
															}
														},
														"id": 130,
														"nodeType": "IfStatement",
														"src": "750:448:0",
														"trueBody": {
															"id": 103,
															"nodeType": "Block",
															"src": "864:107:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 93,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 91,
																					"name": "num2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "886:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 92,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "893:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "886:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "4469766973696f6e20726573756c742063616e6e6f742062652030",
																				"id": 94,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "896:29:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_bb8bed422309627d5f97bb52960082919d94341fe766ce7f39bafc1764579599",
																					"typeString": "literal_string \"Division result cannot be 0\""
																				},
																				"value": "Division result cannot be 0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_bb8bed422309627d5f97bb52960082919d94341fe766ce7f39bafc1764579599",
																					"typeString": "literal_string \"Division result cannot be 0\""
																				}
																			],
																			"id": 90,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				155,
																				156
																			],
																			"referencedDeclaration": 156,
																			"src": "878:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "878:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 96,
																	"nodeType": "ExpressionStatement",
																	"src": "878:48:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 97,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "940:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 98,
																				"name": "num1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3,
																				"src": "949:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 99,
																				"name": "num2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5,
																				"src": "956:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "949:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "940:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 102,
																	"nodeType": "ExpressionStatement",
																	"src": "940:20:0"
																}
															]
														}
													},
													"id": 131,
													"nodeType": "IfStatement",
													"src": "509:689:0",
													"trueBody": {
														"id": 76,
														"nodeType": "Block",
														"src": "623:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 64,
																				"name": "num1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3,
																				"src": "645:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 65,
																				"name": "num2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5,
																				"src": "653:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "645:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "5375627472616374696f6e20726573756c742063616e6e6f74206265206e65676174697665",
																			"id": 67,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "659:39:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_3fef3fe5a9a000188c409bbe4ef1163dfe4aa662d6ff30cd78d40f5021ed1efb",
																				"typeString": "literal_string \"Subtraction result cannot be negative\""
																			},
																			"value": "Subtraction result cannot be negative"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_3fef3fe5a9a000188c409bbe4ef1163dfe4aa662d6ff30cd78d40f5021ed1efb",
																				"typeString": "literal_string \"Subtraction result cannot be negative\""
																			}
																		],
																		"id": 63,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			155,
																			156
																		],
																		"referencedDeclaration": 156,
																		"src": "637:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "637:62:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 69,
																"nodeType": "ExpressionStatement",
																"src": "637:62:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 70,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "713:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 73,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 71,
																			"name": "num1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "722:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 72,
																			"name": "num2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "729:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "722:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "713:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 75,
																"nodeType": "ExpressionStatement",
																"src": "713:20:0"
															}
														]
													}
												},
												"id": 132,
												"nodeType": "IfStatement",
												"src": "344:854:0",
												"trueBody": {
													"id": 49,
													"nodeType": "Block",
													"src": "458:45:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 43,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "472:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 44,
																		"name": "num1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "481:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 45,
																		"name": "num2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "488:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "481:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "472:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 48,
															"nodeType": "ExpressionStatement",
															"src": "472:20:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 133,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1214:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 134,
												"nodeType": "Return",
												"src": "1207:13:0"
											}
										]
									},
									"documentation": null,
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "operation",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "284:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "284:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "283:25:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "325:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "324:9:0"
									},
									"scope": 137,
									"src": "265:962:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 138,
							"src": "57:1172:0"
						}
					],
					"src": "32:1198:0"
				},
				"id": 0
			}
		}
	}
}